# -*- coding: utf-8 -*-
"""ensyu1_backup.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14wbqf9gZR_8rqw03LqmMF7IZBDB9ZUok

# ライブラリの読み込み 解析に使用するライブラリをインポート
"""

# Pandasライブラリを、pdという別名で使用できるように宣言する
# matplotlib.pyplotライブラリを、pltという別名で使用できるように宣言する
import pandas as pd
import matplotlib.pyplot as plt

"""## `Google Driveをマウント`"""

from google.colab import drive 
drive.mount('/content/drive')

"""## データの準備

### 都道府県データの読み込み
"""

df_price_index= pd.read_csv('/content/drive/My Drive/ensyu1/price_index.csv')
df_price_index.head(15)

"""### データの基礎統計量を確認"""

df_price_index.describe()

"""## データの可視化

### まずは散布図による可視化を行って、データの分布を確認
"""

# 都道府県、食料、水道光熱費の列だけを抽出
df_train = df_price_index[['都道府県', '食料', '水道光熱費']]
df_train.head(15)

# プロットの準備(x軸:食料、y軸:水道光熱費)
plt.scatter(df_train['食料'], df_train['水道光熱費'])
# X軸、Y軸のラベルを設定
plt.xlabel('Shokuryo')
plt.ylabel('Suido_Konetsu')

"""# クラスタリング

## 都道府県の列を除外し、食料、水道光熱費だけのデータを作成
"""

# DataFrameをDeep Copy
train_X = df_train.copy(deep=True)
# データから'都道府県'を除外
train_X = train_X.drop('都道府県',axis=1)
train_X.head(15)

"""## k平均法(k-means)で、47都道府県をクラスタリングするためのモデルを生成
クラスタ数は、とりあえず６にする。
"""

# k平均法(k-means)のライブラリをインポート
from sklearn.cluster import KMeans
# k-meansのモデルを生成
## n_clusters = クラスタ数
## random_state = 乱数のシードを固定(デフォルト値: None)
kmodel = KMeans(n_clusters=6, random_state=0)
kmodel

"""## クラスタリングを実行"""

# クラスタリングを実行
kmodel.fit(train_X)
train_Y = kmodel.labels_
print(train_Y)

"""## 個数の確認"""

train_Y.shape

"""## クラスタ番号を、元のDataFrameに連結"""

# 元のDataFrameをコピーして結果用のDataFrameを作成
df_results = df_train.copy(deep=True)
# クラスタ番号を新しい列として連結
df_results['クラスタ番号'] = train_Y
df_results.head(15)

"""## クラスタ番号の順に並び替え"""

df_results.sort_values('クラスタ番号')

"""## 散布図で可視化"""

# プロットの準備(x軸:食料、y軸:水道光熱費、色:クラスタ番号 )
plt.scatter(df_results['食料'], df_results['水道光熱費'], c=df_results['クラスタ番号'])
# X軸、Y軸のラベルを設定
plt.xlabel('Shokuryo')
plt.ylabel('Suido_Konetsu')

"""## カラーコードを設定し、もう一度可視化"""

# プロット/グラフ用のカラーリストを準備
LST_COLOR = ['r','g','b','c','m','y','k','lightping','goldenrod']
# プロットの準備(x軸:食料、y軸:水道光熱費、色:カラーリストのクラスタ番号 )
for i in range(len(df_results)):
  plt.scatter(df_results.iloc[i,1],df_results.iloc[i,2],c=LST_COLOR[df_results.iloc[i,3]],label=df_results.iloc[i,3] )
# X軸、Y軸のラベルを設定
plt.xlabel('Shokuryo')
plt.ylabel('Suido_Konetsu')

"""# エルボー法で、適切なクラスタ数を算出"""

# k平均法(k-means)のライブラリをインポート
from sklearn.cluster import KMeans

lst_history = []

for i in range(1,11): # 1~10クラスタまで一気に計算
  # k-meansのモデルを生成
  kmeans = KMeans(n_clusters=i,random_state=0)
  kmeans.fit(train_X)   # クラスタリングを実行
  lst_history.append(kmeans.inertia_) # inertia_=残差平方和を得る

# 残差二乗和をプロット
plt.plot(range(1,11),lst_history,marker='o')
plt.xlabel('clusters') #クラスタ数
plt.ylabel('SSE')   #残差二乗和
plt.show()

"""# 最後に、適切なクラスタ数（３）で再度クラスタリングを行ってみよう。"""